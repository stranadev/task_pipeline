[project]
name = "task_pipeline"
version = "0.2.0"
description = ""
authors = [
    {name = "Strana Dev",email = "pypi@stranadev.ru"},
]
dependencies = []
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}

[project.urls]
"Repository" = "https://github.com/stranadev/task_pipeline"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.dev-dependencies]
dev = [
    "mypy>=1.8.0",
    "pytest>=7.4.4",
    "coverage>=7.4.0",
    "ruff>=0.1.11",
    "black>=23.12.1",
    "anyio>=4.2.0",
    "commitizen>=3.13.0",
]


[tool.coverage.run]
source = ["task_pipeline"]
command_line = "-m pytest -vv"
concurrency = ["thread"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true
precision = 2
fail_under = 100
exclude_lines = ["^\\s*\\.\\.\\.$"]

[tool.ruff]
target-version = "py311"
src = ["task_pipeline", "tests"]
select = ["ALL"]
fixable = [
    "F",
    "E",
    "W",
    "I",
    "COM",
    "UP",
    "RUF",
]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "D", # pydocstyle
]
[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]


[tool.mypy]
follow_imports = "normal"
ignore_missing_imports = true
# exclude = [".venv"]
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true
no_implicit_optional = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

strict_optional = true
strict_equality = true


[tool.pdm.scripts]
lint = { composite = [
    "ruff check . --fix --show-fixes",
    "black .",
    "ruff check . --fix --show-fixes",
    "mypy .",
] }
test = { composite = [
    "coverage run",
    "coverage report",
] }

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
major_version_zero = true
